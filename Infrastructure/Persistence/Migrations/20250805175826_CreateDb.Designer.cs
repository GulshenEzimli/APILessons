// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20250805175826_CreateDb")]
    partial class CreateDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2025, 8, 5, 21, 58, 25, 512, DateTimeKind.Local).AddTicks(9815),
                            IsDeleted = false,
                            Name = "HP"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2025, 8, 5, 21, 58, 25, 517, DateTimeKind.Local).AddTicks(7612),
                            IsDeleted = false,
                            Name = "Dilvin"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2025, 8, 5, 21, 58, 25, 517, DateTimeKind.Local).AddTicks(7657),
                            IsDeleted = false,
                            Name = "DELL"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2025, 8, 5, 21, 58, 25, 520, DateTimeKind.Local).AddTicks(3791),
                            IsDeleted = false,
                            Name = "Elektrik",
                            ParentId = 0,
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2025, 8, 5, 21, 58, 25, 520, DateTimeKind.Local).AddTicks(3817),
                            IsDeleted = false,
                            Name = "Moda",
                            ParentId = 0,
                            Priority = 2
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2025, 8, 5, 21, 58, 25, 520, DateTimeKind.Local).AddTicks(3820),
                            IsDeleted = false,
                            Name = "Bilgisayar",
                            ParentId = 1,
                            Priority = 1
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2025, 8, 5, 21, 58, 25, 520, DateTimeKind.Local).AddTicks(3823),
                            IsDeleted = false,
                            Name = "Kadın",
                            ParentId = 2,
                            Priority = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Created = new DateTime(2025, 8, 5, 21, 58, 25, 521, DateTimeKind.Local).AddTicks(6619),
                            Description = "Cihazın ne kadar süre çalışabileceğini belirler. mAh (miliamper-saat) cinsinden ölçülür. Daha yüksek değer, daha uzun kullanım süresi sağlar.",
                            IsDeleted = false,
                            Title = "Pil Kapasitesi"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Created = new DateTime(2025, 8, 5, 21, 58, 25, 521, DateTimeKind.Local).AddTicks(6652),
                            Description = "Cihazın ekran tipi ve çözünürlüğü. Örn: AMOLED, LCD, 1080x2400 piksel. Görüntü kalitesi ve kullanıcı deneyimini etkiler.",
                            IsDeleted = false,
                            Title = "Ekran Özelliği"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Created = new DateTime(2025, 8, 5, 21, 58, 25, 521, DateTimeKind.Local).AddTicks(6655),
                            Description = "Cihazın çalışma sırasında harcadığı elektrik miktarıdır. Watt (W) cinsinden ölçülür. Enerji verimliliği açısından önemlidir.",
                            IsDeleted = false,
                            Title = "Enerji Tüketimi"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Created = new DateTime(2025, 8, 5, 21, 58, 25, 521, DateTimeKind.Local).AddTicks(6657),
                            Description = "Bilgisayarın temel işlem gücünü belirler. Program derleme, uygulama çalıştırma gibi işlemlerde performansı etkiler. Örn: Intel Core i7, AMD Ryzen 5.",
                            IsDeleted = false,
                            Title = "İşlemci (CPU)"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Created = new DateTime(2025, 8, 5, 21, 58, 25, 521, DateTimeKind.Local).AddTicks(6660),
                            Description = "Aynı anda çalıştırılan uygulamaların hızlı çalışmasını sağlar. 8 GB ve üzeri RAM, yazılım geliştirme için idealdir.",
                            IsDeleted = false,
                            Title = "RAM (Bellek)"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Created = new DateTime(2025, 8, 5, 21, 58, 25, 521, DateTimeKind.Local).AddTicks(6663),
                            Description = "Grafik işlem görevlerini yerine getirir. Oyun, video işleme ve bazı yapay zeka uygulamalarında kullanılır. Geliştiriciler için genellikle entegre GPU yeterlidir.",
                            IsDeleted = false,
                            Title = "Ekran Kartı (GPU)"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 3,
                            Created = new DateTime(2025, 8, 5, 21, 58, 25, 523, DateTimeKind.Local).AddTicks(3518),
                            Description = "Yüksek performanslı Intel Core i7 işlemci, 16 GB RAM ve 512 GB SSD ile yazılım geliştirme ve profesyonel kullanım için ideal bir ultrabook.",
                            Discount = 2m,
                            IsDeleted = false,
                            Price = 2000m,
                            Title = "Dell XPS 15"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            Created = new DateTime(2025, 8, 5, 21, 58, 25, 523, DateTimeKind.Local).AddTicks(3636),
                            Description = "HP VP2 işlemcisi ile hızlı ve verimli çalışma sunar. Retina ekranı ve uzun pil ömrüyle geliştiriciler için tasarlandı.",
                            Discount = 1.5m,
                            IsDeleted = false,
                            Price = 1500m,
                            Title = "HP  1467 VP2"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 1,
                            Created = new DateTime(2025, 8, 5, 21, 58, 25, 523, DateTimeKind.Local).AddTicks(3640),
                            Description = "Aktif gürültü engelleme özelliği ve yüksek ses kalitesiyle müzik keyfini zirveye taşıyan kablosuz kulaklık.",
                            Discount = 3m,
                            IsDeleted = false,
                            Price = 400m,
                            Title = "HP  1467 VP2"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Detail", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("Deatils")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.HasOne("Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Navigation("Deatils");
                });
#pragma warning restore 612, 618
        }
    }
}
